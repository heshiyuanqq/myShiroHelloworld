<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0" metadata-complete="true">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:conf/spring/spring-context.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<filter>
			<filter-name>Set Character Encoding</filter-name>
			<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
			<async-supported>true</async-supported>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>UTF-8</param-value>
			</init-param>
			<init-param>
				<param-name>forceEncoding</param-name>
				<param-value>true</param-value>
			</init-param>
			<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
			<filter-name>Set Character Encoding</filter-name>
			<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	    <!-- Shiro Filter -->  
	   <!--  确保Web项目中需要权限管理的URL都可以被Shiro拦截过滤。通常将这段代码中的filter-mapping放在所有filter-mapping之前，
	    以达到shiro是第一个对web请求进行拦截过滤之目的。这里的fileter-name应该要和第二步中配置的Java bean的id一致。 -->
        <filter>  
            <filter-name>shiroFilter</filter-name>  
            <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
            <init-param>  
                <param-name>targetFilterLifecycle</param-name>  
                <param-value>true</param-value>  
            </init-param>  
        </filter>  
        <filter-mapping>  
            <filter-name>shiroFilter</filter-name>  
            <url-pattern>/*</url-pattern>  
        </filter-mapping>  
	 
	 
	 <!--google captcha验证码 servlet--> 
	 <servlet> 
			   <servlet-name>kaptcha</servlet-name> 
			   <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class> 
	 </servlet> 
	 <servlet-mapping> 
			 <servlet-name>kaptcha</servlet-name> 
			 <url-pattern>/verificationCode/kaptcha/kaptcha.jpg</url-pattern> 
	 </servlet-mapping>



	<!-- springmvc核心servlet -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:conf/spring/springmvc-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


</web-app>